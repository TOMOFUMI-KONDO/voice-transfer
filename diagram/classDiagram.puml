@startuml

class VoiceReceiver {
    - {static} int PACKET_SIZE

    - VoicePlayer player
    - int serverPort
    - byte[] buffer
    - DatagramSocket socket
    - DatagramPacket packet

    + VoiceReceiver(int serverPort)
    + void start()
    + void run()
    + void end()
}

class VoicePlayer{
    - {static} int HZ
    - {static} int BITS
    - {static} int MONO

    - SourceDataLine source
    - byte[] voice

    + VoicePlayer()
    + void start()
    + void run()
    + void setVoice(byte[])
    + void end()
}

class VoiceSenderSet {
    - Set<VoiceSender> senders

    + Set<VoiceSender> getSenders()
    + void addSender(VoiceSender)
    + void removeSender(VoiceSender)
}

class VoiceSenderCreator {
    + VoiceSender createSender(String serverHost, int serverPort)
}

class VoiceSender {
    - {static} int INTERVAL

    - VoiceListener listener
    - int serverHost
    - int serverPort
    - InetSocketAddress address
    - DatagramSocket socket

    + VoiceSender(String serverHost, int serverPort)
    + void start()
    + void run()
    + void end()
}

class VoiceListener {
    - {static} int HZ
    - {static} int BITS
    - {static} int MONO

    - TargetDataLine target
    - AudioInputStream stream
    - byte[] voice

    + VoiceListener()
    + void start()
    + void run()
    + byte[] getVoice()
    + void end()
}

class Thread {
     + void start()
     + void run()
}


VoiceReceiver --|> Thread
VoiceReceiver *-- VoicePlayer
VoicePlayer --|> Thread

VoiceSenderSet o-- VoiceSender
VoiceSenderCreator --> VoiceSender
VoiceSender --|> Thread
VoiceSender *-- VoiceListener
VoiceListener --|> Thread

@enduml